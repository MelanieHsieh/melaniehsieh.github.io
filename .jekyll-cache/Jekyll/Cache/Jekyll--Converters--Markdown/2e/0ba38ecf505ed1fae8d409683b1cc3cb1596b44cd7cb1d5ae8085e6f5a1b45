I"+<p>One of the project this year is to make a Todo App. If you search <em>todo app</em> in the app store or play store there are a lot of options. However I tried a few of them, and often they are either too complicated to use, or they are just missing some functions I want. So this upcoming month, I am planning to launch my Todo App called <strong>Subtle</strong> from scratch.</p>

<h1 id="part-1-planning-phase">Part 1: Planning Phase</h1>

<p>For the planning I used <strong>Adobe XD</strong> to help me finalize the design. Adobe XD is a free app that helps you design the <strong>UI (User Interface)</strong> of the app.</p>

<p>Here are a few snap shots of my app (in planning phase). I am aiming for a minimalistic app, which is simple and clean.</p>

<p><img src="/img/todo/zoomin.png" alt="zoomin" width="800" height="450" /></p>

<p>After you finalize the UI of the app, letâ€™s move on to the code. ðŸ˜‰</p>

<h1 id="part-2-front-end">Part 2: Front End</h1>

<p>When creating an app there is <strong>Front End</strong> and <strong>Back End</strong>. Front End is the client side, where it consists of <em>UI</em>, <em>color scheme</em>, <em>UX</em>. Back End is the database side, where it consists of <em>database</em>, <em>schemas</em>, <em>authentication</em> and many more.</p>

<p>We will start with the <strong>Front End</strong>.</p>

<h2 id="tools">Tools</h2>

<ul>
  <li>React Native (A programming language developed by <em>Facebook</em>, it isnâ€™t a native language which means it doesnâ€™t use <em>Swift</em>, <em>Java</em> or <em>Kotlin</em>. But it uses <em>Javascript</em> and <em>Typescript</em> to build apps that are available for both IOS and Android devices ðŸ˜€ )</li>
  <li>VS Code (Code Editor, I want to switch to <em>Vim</em> but I donâ€™t have time to learn and install all the bundles and depencies, so I am sticking with VS Code)</li>
  <li>iTerm (Terminal)</li>
</ul>

<h1 id="part-3-setting-up">Part 3: Setting Up</h1>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">npm</span> <span class="nx">install</span> <span class="nx">expo</span><span class="o">-</span><span class="nx">cli</span> <span class="o">--</span><span class="nb">global</span>
<span class="nx">expo</span> <span class="nx">init</span> <span class="nx">newProject</span> <span class="c1">//your project name</span>
<span class="nx">cd</span> <span class="nx">newProject</span> <span class="c1">//your project name</span>
<span class="nx">expo</span> <span class="nx">start</span>
</code></pre></div></div>

<p>I used expo to setup my project. Expo is a tool that can help you build a React Native app quickly, there is also an app (Expo) which you can install on your phone to render your app live.</p>

<h2 id="doubletap">DoubleTap</h2>

<p>I replaced the <code class="language-plaintext highlighter-rouge">TouchableOpacity</code> button with <code class="language-plaintext highlighter-rouge">DoubleTap</code>. So when you double tap the screen it will submit the todo item to the database.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">DoubleTapButton</span><span class="p">({</span> <span class="nx">onDoubleTap</span><span class="p">,</span> <span class="nx">children</span> <span class="p">})</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">onHandlerStateChange</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">nativeEvent</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">nativeEvent</span><span class="p">.</span><span class="nx">state</span> <span class="o">===</span> <span class="nx">State</span><span class="p">.</span><span class="nx">ACTIVE</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">onDoubleTap</span> <span class="o">&amp;&amp;</span> <span class="nx">onDoubleTap</span><span class="p">();</span>
    <span class="p">}</span>
  <span class="p">};</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">TapGestureHandler</span>
      <span class="nx">onHandlerStateChange</span><span class="o">=</span><span class="p">{</span><span class="nx">onHandlerStateChange</span><span class="p">}</span>
      <span class="nx">numberOfTaps</span><span class="o">=</span><span class="p">{</span><span class="mi">2</span><span class="p">}</span>
    <span class="o">&gt;</span>
      <span class="p">{</span><span class="nx">children</span><span class="p">}</span>
    <span class="o">&lt;</span><span class="sr">/TapGestureHandler</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="onsubmit">onSubmit</h2>

<p>Create a simple <code class="language-plaintext highlighter-rouge">TextInput</code> and call <code class="language-plaintext highlighter-rouge">DoubleTap</code>. When you double tap the screen, the item in the text input should call a function <code class="language-plaintext highlighter-rouge">this.onSubmit</code>. It should console log the item on your terminal.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">onSubmit</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">todo</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">title</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">status</span><span class="p">,</span>
    <span class="na">date</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">date</span><span class="p">,</span>
  <span class="p">};</span>

  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">todo</span><span class="p">);</span>

  <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
    <span class="na">title</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span>
    <span class="na">visible</span><span class="p">:</span> <span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">visible</span><span class="p">,</span>
  <span class="p">});</span>
<span class="p">};</span>
</code></pre></div></div>

<h2 id="addtodo">AddTodo</h2>

<p>I added an <code class="language-plaintext highlighter-rouge">if...else</code> statement so it could switch pages easily. Not sure if this is the most effective way. I am planning to use <code class="language-plaintext highlighter-rouge">Routes</code> next time just to test different methods out.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">DoubleTapButton</span> <span class="nx">onDoubleTap</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">onSubmit</span><span class="p">}</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">styles</span><span class="p">.</span><span class="nx">container</span><span class="p">}</span><span class="o">&gt;</span>
    <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">fontLoaded</span> <span class="p">?</span> <span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">View</span><span class="o">&gt;</span>
        <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">visible</span> <span class="p">?</span> <span class="p">(</span>
          <span class="o">&lt;</span><span class="nx">View</span><span class="o">&gt;</span>
            <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Welcome</span><span class="o">&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>          <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>        <span class="p">)</span> <span class="p">:</span> <span class="p">(</span>
          <span class="o">&lt;</span><span class="nx">View</span><span class="o">&gt;</span>
            <span class="o">&lt;</span><span class="nx">TextInput</span>
              <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">styles</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span>
              <span class="nx">onChangeText</span><span class="o">=</span><span class="p">{(</span><span class="nx">title</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span> <span class="nx">title</span> <span class="p">})}</span>
              <span class="nx">value</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span>
              <span class="nx">placeholder</span><span class="o">=</span><span class="dl">"</span><span class="s2">today i will...</span><span class="dl">"</span>
            <span class="o">/&gt;</span>
          <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>        <span class="p">)}</span>
      <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>    <span class="p">)</span> <span class="p">:</span> <span class="kc">null</span><span class="p">}</span>
  <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/DoubleTapButton</span><span class="err">&gt;
</span></code></pre></div></div>

<h1 id="end">END</h1>

<p>This blog gave you a simple tutorial on starting and adding features to your Todo App.</p>

<p>I have put the full source code for this weekâ€™s tutorial on <strong><a href="https://github.com/melaniehsieh/subtle">Github</a></strong>. Good Luck!</p>

<p>Thanks for reading ðŸ‘€. There will be a weekly blog every Friday, Stay Tuned.ðŸ˜‰</p>
:ET